<?xml version="1.0"?>
<todo version="0.1.20">
    <note priority="veryhigh" time="1477612654" done="1477613465">
        Add a common writer API
        <comment>
            There should be a common API to point to a file URL and write it.

            commit ef372399f1ea65708b1f3989ba7a7de6dc42737d
	    Author: Caoimhe Chaos &lt;caoimhechaos@protonmail.com&gt;
	    Date:   Mon Sep 8 00:43:59 2014 +0200

	    Add a new registry for file systems and add the regular file
	    implementation as one.
        </comment>
    </note>
    <note priority="veryhigh" time="1477612703" done="1477613863">
        Add a common reader API
        <comment>
            There should be a way to specify that you just want to read from a
	    given URL, without knowledge of what type of backend tat URL is
	    connected to.

            commit ef372399f1ea65708b1f3989ba7a7de6dc42737d
	    Author: Caoimhe Chaos &lt;caoimhechaos@protonmail.com&gt;
	    Date:   Mon Sep 8 00:43:59 2014 +0200

	    Add a new registry for file systems and add the regular file
	    implementation as one.
        </comment>
    </note>
    <note priority="veryhigh" time="1477612763" done="1477624476">
        Remove Doozer file reader
        <comment>
            Doozer is deprecated.

            commit 97706ab539b3b0c0692cf53d9d2e6834508a0adc
	    Author: Caoimhe Chaos &lt;caoimhechaos@protonmail.com&gt;
	    Date:   Fri Oct 28 02:45:54 2016 +0200

	    Remove Doozer support.

	    Doozer is deprecated; the code doesn't even build anymore so it is time
	    to let it go.
        </comment>
    </note>
    <note priority="veryhigh" time="1477613074" done="1477613088">
        Create a registry for watching files
        <comment>
            There should be a way to watch files without knowing what kind of
	    backend they're connected to.

            commit 28ddbd8d064635277e08032b56d0136df9f917fe
	    Author: Caoimhe Chaos &lt;caoimhechaos@protonmail.com&gt;
	    Date:   Thu Sep 4 23:53:03 2014 +0200

	    Create a registry for file watchers.

	    Add a Doozer implementation to it.
        </comment>
    </note>
    <note priority="high" time="1477613364" done="1477613376">
        Implement a plain file watcher
        <comment>
            Implement an object for watching plain files for changes.

            commit 7e22e23085e4e2ba6a37b21395ce06978a5cdfb6
	    Author: Caoimhe Chaos &lt;caoimhechaos@protonmail.com&gt;
	    Date:   Fri Sep 5 22:50:20 2014 +0200

	    Implement watchers for regular files as well.
        </comment>
    </note>
    <note priority="medium" time="1477612869" done="1477624549">
        Add etcd reader/watcher support
        <comment>
            commit e92c3982aff5f01698c1a1fa91d008c0286f6f7b
	    Author: Caoimhe Chaos &lt;caoimhechaos@protonmail.com&gt;
	    Date:   Fri Oct 28 05:12:20 2016 +0200

	    Add support for treating etcd as a file system.

	    Also add etcd support to fscli. The whole implementation follows
	    the "write on close" scheme since etcd updates are supposed to be
	    atomic.
        </comment>
    </note>
    <note priority="medium" time="1477612891" done="1477612914">
        Create a Doozer file reader
        <comment>
            There should be a way to simply read a Doozer file using an
	    io.Reader interface.

            commit 109eb47e86978d857f413f56053b17398cf58038
	    Author: Caoimhe Chaos &lt;caoimhechaos@protonmail.com&gt;
	    Date:   Thu Sep 4 02:24:19 2014 +0200

	    Add a simple implementation of a Doozer file reader.
        </comment>
    </note>
    <note priority="medium" time="1477613210" done="1477613253">
        Create a Doozer file watcher implementation
        <comment>
            There should be a way to watch Doozer files for changes via URLs,
	    without knowing implementation details.

            commit 28ddbd8d064635277e08032b56d0136df9f917fe
	    Author: Caoimhe Chaos &lt;caoimhechaos@protonmail.com&gt;
	    Date:   Thu Sep 4 23:53:03 2014 +0200

	    Create a registry for file watchers.

	    Add a Doozer implementation to it.
        </comment>
    </note>
    <note priority="medium" time="1477624698" done="1477689608">
        Add support for rados blocks as a file system.
        <comment>
            rados is a commonly used block store which mostly supports
	    appending to files, so it should be relatively simple to add
	    rudimentary file system support for it (with most functions just
	    returning errors).

	    commit f4ff4b451ac1aa331df5f927339f5131f89eee09
	    Author: Caoimhe Chaos &lt;caoimhechaos@protonmail.com&gt;
	    Date:   Fri Oct 28 23:17:43 2016 +0200

	    Add support for reading and writing Rados files using the file API.

	    There is no watcher or list support so this is really rudimentary,
	    but it should probably work.
        </comment>
    </note>
    <note priority="low" time="1477612549">
        Add unit tests
        <comment>
            As a respectable project we should have unit tests, I just can't
	     currently think of a way to implement them.
        </comment>
    </note>
</todo>
